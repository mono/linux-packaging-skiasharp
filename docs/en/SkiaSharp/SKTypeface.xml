<Type Name="SKTypeface" FullName="SkiaSharp.SKTypeface">
  <TypeSignature Language="C#" Value="public class SKTypeface : SkiaSharp.SKObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SKTypeface extends SkiaSharp.SKObject" />
  <AssemblyInfo>
    <AssemblyName>SkiaSharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.49.0.0</AssemblyVersion>
    <AssemblyVersion>1.52.0.0</AssemblyVersion>
    <AssemblyVersion>1.53.0.0</AssemblyVersion>
    <AssemblyVersion>1.54.0.0</AssemblyVersion>
    <AssemblyVersion>1.54.0.0</AssemblyVersion>
    <AssemblyVersion>1.55.0.0</AssemblyVersion>
    <AssemblyVersion>1.56.0.0</AssemblyVersion>
    <AssemblyVersion>1.57.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>SkiaSharp.SKObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a specific typeface and intrinsic style of a font.</summary>
    <remarks>
      <para>This is used in the paint, along with optionally algorithmic settings like <see cref="P:SkiaSharp.SKPaint.TextSize" />, <see cref="P:SkiaSharp.SKPaint.TextSkewX" />  <see cref="P:SkiaSharp.SKPaint.TextScaleX" />  <see cref="P:SkiaSharp.SKPaint.FakeBoldText" />, to specify how text appears when drawn (and measured). </para>
      <para>Typeface objects are immutable, and so they can be shared between threads.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CharsToGlyphs">
      <MemberSignature Language="C#" Value="public int CharsToGlyphs (string chars, out ushort[] glyphs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CharsToGlyphs(string chars, unsigned int16[] glyphs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
        <AssemblyVersion>1.52.0.0</AssemblyVersion>
        <AssemblyVersion>1.53.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.55.0.0</AssemblyVersion>
        <AssemblyVersion>1.56.0.0</AssemblyVersion>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.String" />
        <Parameter Name="glyphs" Type="System.UInt16[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="chars">The string containing characters.</param>
        <param name="glyphs">Destination for the corresponding glyph IDs for each character.</param>
        <summary>Given a string, optionally return their corresponding glyph IDs.</summary>
        <returns>The number of number of continuous non-zero glyph IDs computed from the beginning of chars.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharsToGlyphs">
      <MemberSignature Language="C#" Value="public int CharsToGlyphs (IntPtr str, int strlen, SkiaSharp.SKEncoding encoding, out ushort[] glyphs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CharsToGlyphs(native int str, int32 strlen, valuetype SkiaSharp.SKEncoding encoding, unsigned int16[] glyphs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
        <AssemblyVersion>1.52.0.0</AssemblyVersion>
        <AssemblyVersion>1.53.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.55.0.0</AssemblyVersion>
        <AssemblyVersion>1.56.0.0</AssemblyVersion>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.IntPtr" />
        <Parameter Name="strlen" Type="System.Int32" />
        <Parameter Name="encoding" Type="SkiaSharp.SKEncoding" />
        <Parameter Name="glyphs" Type="System.UInt16[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="str">The buffer of character codes.</param>
        <param name="strlen">The length of the buffer.</param>
        <param name="encoding">How the characters are encoded.</param>
        <param name="glyphs">Destination for the corresponding glyph IDs for each character.</param>
        <summary>Given a buffer containing character codes, of the specified encoding, optionally return their corresponding glyph IDs.</summary>
        <returns>The number of number of continuous non-zero glyph IDs computed from the beginning of chars.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CountGlyphs">
      <MemberSignature Language="C#" Value="public int CountGlyphs (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CountGlyphs(string str) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
        <AssemblyVersion>1.52.0.0</AssemblyVersion>
        <AssemblyVersion>1.53.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.55.0.0</AssemblyVersion>
        <AssemblyVersion>1.56.0.0</AssemblyVersion>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">The string containing characters.</param>
        <summary>Returns the number of glyphs on the string.</summary>
        <returns>The number of number of continuous non-zero glyph IDs computed from the beginning of chars.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CountGlyphs">
      <MemberSignature Language="C#" Value="public int CountGlyphs (IntPtr str, int strLen, SkiaSharp.SKEncoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CountGlyphs(native int str, int32 strLen, valuetype SkiaSharp.SKEncoding encoding) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
        <AssemblyVersion>1.52.0.0</AssemblyVersion>
        <AssemblyVersion>1.53.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.55.0.0</AssemblyVersion>
        <AssemblyVersion>1.56.0.0</AssemblyVersion>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.IntPtr" />
        <Parameter Name="strLen" Type="System.Int32" />
        <Parameter Name="encoding" Type="SkiaSharp.SKEncoding" />
      </Parameters>
      <Docs>
        <param name="str">The buffer of character codes.</param>
        <param name="strLen">The length of the buffer.</param>
        <param name="encoding">How the characters are encoded.</param>
        <summary>Returns the number of glyphs on the specified buffer with the specified length and encoding.</summary>
        <returns>The number of number of continuous non-zero glyph IDs computed from the beginning of chars.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
        <AssemblyVersion>1.52.0.0</AssemblyVersion>
        <AssemblyVersion>1.53.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.55.0.0</AssemblyVersion>
        <AssemblyVersion>1.56.0.0</AssemblyVersion>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyName">
      <MemberSignature Language="C#" Value="public string FamilyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FamilyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
        <AssemblyVersion>1.52.0.0</AssemblyVersion>
        <AssemblyVersion>1.53.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.55.0.0</AssemblyVersion>
        <AssemblyVersion>1.56.0.0</AssemblyVersion>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the family name for the typeface.</summary>
        <value>
          <para></para>
        </value>
        <remarks>The family name will always be returned encoded as UTF8, but the language of the name is whatever the host platform chooses.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontSlant">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKFontStyleSlant FontSlant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKFontStyleSlant FontSlant" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.55.0.0</AssemblyVersion>
        <AssemblyVersion>1.56.0.0</AssemblyVersion>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKFontStyleSlant</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the font slant for the typeface.</summary>
        <value>
          <para></para>
        </value>
        <remarks>This may be one of the values in <see cref="T:SkiaSharp.SKFontStyleSlant" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontWeight">
      <MemberSignature Language="C#" Value="public int FontWeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FontWeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.55.0.0</AssemblyVersion>
        <AssemblyVersion>1.56.0.0</AssemblyVersion>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the font weight for the typeface.</summary>
        <value>
          <para></para>
        </value>
        <remarks>This may be one of the values in <see cref="T:SkiaSharp.SKFontStyleWeight" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontWidth">
      <MemberSignature Language="C#" Value="public int FontWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FontWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.55.0.0</AssemblyVersion>
        <AssemblyVersion>1.56.0.0</AssemblyVersion>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the font width for the typeface.</summary>
        <value>
          <para></para>
        </value>
        <remarks>This may be one of the values in <see cref="T:SkiaSharp.SKFontStyleWidth" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFamilyName">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKTypeface FromFamilyName (string familyName, SkiaSharp.SKTypefaceStyle style = SkiaSharp.SKTypefaceStyle.Normal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKTypeface FromFamilyName(string familyName, valuetype SkiaSharp.SKTypefaceStyle style) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
        <AssemblyVersion>1.52.0.0</AssemblyVersion>
        <AssemblyVersion>1.53.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.55.0.0</AssemblyVersion>
        <AssemblyVersion>1.56.0.0</AssemblyVersion>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypeface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
        <Parameter Name="style" Type="SkiaSharp.SKTypefaceStyle" />
      </Parameters>
      <Docs>
        <param name="familyName">The name of the font family. May be <paramref name="null" />.</param>
        <param name="style">The style (normal, bold, italic) of the typeface.</param>
        <summary>Returns a new instance to a typeface that most closely matches the requested family name and style.</summary>
        <returns>Returns to the closest-matching typeface.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFamilyName">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKTypeface FromFamilyName (string familyName, SkiaSharp.SKFontStyleWeight weight, SkiaSharp.SKFontStyleWidth width, SkiaSharp.SKFontStyleSlant slant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKTypeface FromFamilyName(string familyName, valuetype SkiaSharp.SKFontStyleWeight weight, valuetype SkiaSharp.SKFontStyleWidth width, valuetype SkiaSharp.SKFontStyleSlant slant) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.52.0.0</AssemblyVersion>
        <AssemblyVersion>1.53.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.55.0.0</AssemblyVersion>
        <AssemblyVersion>1.56.0.0</AssemblyVersion>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypeface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
        <Parameter Name="weight" Type="SkiaSharp.SKFontStyleWeight" />
        <Parameter Name="width" Type="SkiaSharp.SKFontStyleWidth" />
        <Parameter Name="slant" Type="SkiaSharp.SKFontStyleSlant" />
      </Parameters>
      <Docs>
        <param name="familyName">The name of the font family. May be <paramref name="null" />.</param>
        <param name="weight">The weight of the typeface.</param>
        <param name="width">The width of the typeface.</param>
        <param name="slant">The slant of the typeface.</param>
        <summary>Return a new instance to a typeface that most closely matches the requested family name and style.</summary>
        <returns>Returns to the closest-matching typeface.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFamilyName">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKTypeface FromFamilyName (string familyName, int weight, int width, SkiaSharp.SKFontStyleSlant slant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKTypeface FromFamilyName(string familyName, int32 weight, int32 width, valuetype SkiaSharp.SKFontStyleSlant slant) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.52.0.0</AssemblyVersion>
        <AssemblyVersion>1.53.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.55.0.0</AssemblyVersion>
        <AssemblyVersion>1.56.0.0</AssemblyVersion>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypeface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
        <Parameter Name="weight" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="slant" Type="SkiaSharp.SKFontStyleSlant" />
      </Parameters>
      <Docs>
        <param name="familyName">The name of the font family. May be <paramref name="null" />.</param>
        <param name="weight">The weight of the typeface.</param>
        <param name="width">The width of the typeface.</param>
        <param name="slant">The slant of the typeface.</param>
        <summary>Return a new instance to a typeface that most closely matches the requested family name and style.</summary>
        <returns>Returns to the closest-matching typeface.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFile">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKTypeface FromFile (string path, int index = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKTypeface FromFile(string path, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
        <AssemblyVersion>1.52.0.0</AssemblyVersion>
        <AssemblyVersion>1.53.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.55.0.0</AssemblyVersion>
        <AssemblyVersion>1.56.0.0</AssemblyVersion>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypeface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="path">The path of the file.</param>
        <param name="index">The font face index.</param>
        <summary>Returns a new typeface given a file. </summary>
        <returns>Returns a new typeface, or <paramref name="null" /> if the file does not exist, or is not a valid font file.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromStream">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKTypeface FromStream (SkiaSharp.SKStreamAsset stream, int index = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKTypeface FromStream(class SkiaSharp.SKStreamAsset stream, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
        <AssemblyVersion>1.52.0.0</AssemblyVersion>
        <AssemblyVersion>1.53.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.55.0.0</AssemblyVersion>
        <AssemblyVersion>1.56.0.0</AssemblyVersion>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypeface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="SkiaSharp.SKStreamAsset" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream">The input stream.</param>
        <param name="index">The font face index.</param>
        <summary>Returns a new typeface given a stream. Ownership of the stream is transferred, so the caller must not reference it again.</summary>
        <returns>Returns a new typeface, or <paramref name="null" /> if the file does not exist, or is not a valid font file.</returns>
        <remarks>
          <para></para>
          <example>
            <code lang="C#"><![CDATA[var stream = new SKFileStream (“myfont.ttf”);
using (var tf = SKTypeface.FromStream (stream)) {
    paint.Color = XamDkBlue;
    paint.TextSize = 60;
    paint.Typeface = tf;

    canvas.DrawText (text, 50, 100, paint);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromStream">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKTypeface FromStream (System.IO.Stream stream, int index = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKTypeface FromStream(class System.IO.Stream stream, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypeface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream">The input stream.</param>
        <param name="index">The font face index.</param>
        <summary>Returns a new typeface given a stream. Ownership of the stream is transferred, so the caller must not reference it again.</summary>
        <returns>Returns a new typeface, or <paramref name="null" /> if the file does not exist, or is not a valid font file.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromTypeface">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKTypeface FromTypeface (SkiaSharp.SKTypeface typeface, SkiaSharp.SKTypefaceStyle style = SkiaSharp.SKTypefaceStyle.Normal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKTypeface FromTypeface(class SkiaSharp.SKTypeface typeface, valuetype SkiaSharp.SKTypefaceStyle style) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
        <AssemblyVersion>1.52.0.0</AssemblyVersion>
        <AssemblyVersion>1.53.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.55.0.0</AssemblyVersion>
        <AssemblyVersion>1.56.0.0</AssemblyVersion>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypeface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeface" Type="SkiaSharp.SKTypeface" />
        <Parameter Name="style" Type="SkiaSharp.SKTypefaceStyle" />
      </Parameters>
      <Docs>
        <param name="typeface">The typeface to use for the family name.</param>
        <param name="style">The style (normal, bold, italic) of the type face.</param>
        <summary>Return a new reference to the typeface that most closely matches the requested typeface and specified style</summary>
        <returns>Returns to the closest-matching typeface.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTableData">
      <MemberSignature Language="C#" Value="public byte[] GetTableData (uint tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetTableData(unsigned int32 tag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
        <AssemblyVersion>1.52.0.0</AssemblyVersion>
        <AssemblyVersion>1.53.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.55.0.0</AssemblyVersion>
        <AssemblyVersion>1.56.0.0</AssemblyVersion>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="tag">The table tag to get the data for.</param>
        <summary>Returns the contents of the table data for the specified tag.</summary>
        <returns>Returns the contents, if it exists, otherwise throws.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTableTags">
      <MemberSignature Language="C#" Value="public uint[] GetTableTags ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int32[] GetTableTags() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
        <AssemblyVersion>1.52.0.0</AssemblyVersion>
        <AssemblyVersion>1.53.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.55.0.0</AssemblyVersion>
        <AssemblyVersion>1.56.0.0</AssemblyVersion>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the list of table tags in the font.</summary>
        <returns>
          <para></para>
        </returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKTypefaceStyle Style { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKTypefaceStyle Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.55.0.0</AssemblyVersion>
        <AssemblyVersion>1.56.0.0</AssemblyVersion>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypefaceStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the the typeface's intrinsic style attributes.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetTableData">
      <MemberSignature Language="C#" Value="public bool TryGetTableData (uint tag, out byte[] tableData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetTableData(unsigned int32 tag, unsigned int8[] tableData) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
        <AssemblyVersion>1.52.0.0</AssemblyVersion>
        <AssemblyVersion>1.53.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.54.0.0</AssemblyVersion>
        <AssemblyVersion>1.55.0.0</AssemblyVersion>
        <AssemblyVersion>1.56.0.0</AssemblyVersion>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.UInt32" />
        <Parameter Name="tableData" Type="System.Byte[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="tag">The table tag to get the data for.</param>
        <param name="tableData">The contents of the table data for the specified tag.</param>
        <summary>Returns the contents of the table data for the specified tag.</summary>
        <returns>Returns true if the content exists, otherwise false.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
